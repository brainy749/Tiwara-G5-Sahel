admin1=="Barh el Ghazel" ~ "Barh El Gazal",
admin1=="Chari-Baguirmi" ~ "Chari Baguirmi",
admin1=="Guera"~"Guéra",
admin1=="Mayo-Kebbi Est" ~ "Mayo Kebbi Est",
admin1=="Mayo-Kebbi Ouest" ~ "Mayo Kebbi Ouest",
admin1=="Moyen-Chari" ~ "Moyen Chari",
admin1=="Ouaddai" ~ "Ouaddaï",
admin1=="Tandjile"~"Tandjilé",
admin1=="Borkou" ~ "Borkou/Tibesti",
admin1=="Ennedi Est" ~ "Ennedi Est/Ennedi Ouest",
T ~ admin1)),
by = c("admin1bis" = "CharacteristicLabel")
) %>%
filter(! is.na(Coordinates)) %>%
mutate(Coordinates=st_as_sfc(Coordinates)) %>%
st_as_sf()
sahel_tiwara_geo<-bind_rows(sahel_tiwara_geo_else,sahel_tiwara_geo_mr)
sahel_tiwara_geo_mr <- left_join(
y = sahel %>%select(name, geometry) %>% mutate(name=as.character(name)) %>% rename(CharacteristicLabel=name,Coordinates=geometry),
x = inform_sahel_tiwara %>% filter(country == "Mauritania" | admin1=="Sila"),
by = c("admin1" = "CharacteristicLabel")
)
##-------get geodata on Sahel states
#sahel <- ne_states(country=sahel_tiwara, returnclass = "sf") # filter on states in target countries
#st_write(st_as_sf(sahel), './inputs/sahel.shp')
sahel <- st_read(paste0(data_path,sahel_shapefile))
sahel_tiwara_geo_mr <- left_join(
y = sahel %>%select(name, geometry) %>% mutate(name=as.character(name)) %>% rename(CharacteristicLabel=name,Coordinates=geometry),
x = inform_sahel_tiwara %>% filter(country == "Mauritania" | admin1=="Sila"),
by = c("admin1" = "CharacteristicLabel")
)
sahel_tiwara_geo_else <- left_join(
y = poly_dhs %>% mutate(CharacteristicLabel=as.character(CharacteristicLabel)),
x = inform_sahel_tiwara %>%
mutate(admin1bis=case_when(admin1=="Boucle du Mouhoun" ~ "Boucle de Mouhoun",
admin1=="Centre Est" ~ "Centre-Est",
admin1=="Centre Nord" ~ "Centre-Nord",
admin1=="Centre Ouest" ~ "Centre-Ouest",
admin1=="Centre Sud" ~ "Centre-Sud",
admin1=="Centre" ~ "Centre (excluding Ouagadougou)",
admin1=="Segou" ~ "Ségou",
admin1=="Timbuktu" ~ "Tombouctou",
admin1=="Tillabery" ~ "Tillabéri",
admin1=="Barh el Ghazel" ~ "Barh El Gazal",
admin1=="Chari-Baguirmi" ~ "Chari Baguirmi",
admin1=="Guera"~"Guéra",
admin1=="Mayo-Kebbi Est" ~ "Mayo Kebbi Est",
admin1=="Mayo-Kebbi Ouest" ~ "Mayo Kebbi Ouest",
admin1=="Moyen-Chari" ~ "Moyen Chari",
admin1=="Ouaddai" ~ "Ouaddaï",
admin1=="Tandjile"~"Tandjilé",
admin1=="Borkou" ~ "Borkou/Tibesti",
admin1=="Ennedi Est" ~ "Ennedi Est/Ennedi Ouest",
T ~ admin1)),
by = c("admin1bis" = "CharacteristicLabel")
) %>%
filter(! is.na(Coordinates)) %>%
mutate(Coordinates=st_as_sfc(Coordinates)) %>%
st_as_sf()
sahel_tiwara_geo<-bind_rows(sahel_tiwara_geo_else,sahel_tiwara_geo_mr)
sahel_tiwara_geo_mr <- left_join(
y = sahel %>%select(name, geometry) %>% mutate(name=as.character(name)) %>% rename(CharacteristicLabel=name,Coordinates=geometry),
x = inform_sahel_tiwara %>% filter(country == "Mauritania" | admin1=="Sila"),
by = c("admin1" = "CharacteristicLabel")
) %>%
st_as_sf()
sahel_tiwara_geo_else <- left_join(
y = poly_dhs %>% mutate(CharacteristicLabel=as.character(CharacteristicLabel)),
x = inform_sahel_tiwara %>%
mutate(admin1bis=case_when(admin1=="Boucle du Mouhoun" ~ "Boucle de Mouhoun",
admin1=="Centre Est" ~ "Centre-Est",
admin1=="Centre Nord" ~ "Centre-Nord",
admin1=="Centre Ouest" ~ "Centre-Ouest",
admin1=="Centre Sud" ~ "Centre-Sud",
admin1=="Centre" ~ "Centre (excluding Ouagadougou)",
admin1=="Segou" ~ "Ségou",
admin1=="Timbuktu" ~ "Tombouctou",
admin1=="Tillabery" ~ "Tillabéri",
admin1=="Barh el Ghazel" ~ "Barh El Gazal",
admin1=="Chari-Baguirmi" ~ "Chari Baguirmi",
admin1=="Guera"~"Guéra",
admin1=="Mayo-Kebbi Est" ~ "Mayo Kebbi Est",
admin1=="Mayo-Kebbi Ouest" ~ "Mayo Kebbi Ouest",
admin1=="Moyen-Chari" ~ "Moyen Chari",
admin1=="Ouaddai" ~ "Ouaddaï",
admin1=="Tandjile"~"Tandjilé",
admin1=="Borkou" ~ "Borkou/Tibesti",
admin1=="Ennedi Est" ~ "Ennedi Est/Ennedi Ouest",
T ~ admin1)),
by = c("admin1bis" = "CharacteristicLabel")
) %>%
filter(! is.na(Coordinates)) %>%
mutate(Coordinates=st_as_sfc(Coordinates)) %>%
st_as_sf()
sahel_tiwara_geo<-bind_rows(sahel_tiwara_geo_else,sahel_tiwara_geo_mr)
saveRDS(sahel_tiwara_geo,paste0(data_path,processed_folder,sahel_tiwara_geo_processed))
runApp()
mports paquets ---------------------------------------------------------
# library(devtools)
#devtools::install_github("RinteRface/bs4Dash")
library(shiny)
library(fontawesome)
library(shinyWidgets)
library(bs4Dash)
library(plotly)
library(r2d3)
library(r2d3maps)
library(rnaturalearth)
library(magick)
library(leaflet)
library(leaflet.extras)
library(lubridate)
library(DT)
library(recipes)
library(highcharter)
library(tidyverse)
library(billboarder)
library(echarts4r)
library(countrycode)
library(shinydashboard)
library(flexdashboard)
library(sf)
library(shinythemes)
library(htmlwidgets)
library(janitor)
library(configr)
library(httr)
library(jsonlite)
library(shinyWidgets)
library(corrplot)
library(tsne)
library(NbClust)
library(readxl)
library(readr)
library(geosphere)
library(qualpalr)
library(circlize)
library(rdbnomics)
library(esquisse)
## Permet de télécharger les cartes leaflet
jsfile <- "https://rawgit.com/rowanwins/leaflet-easyPrint/gh-pages/dist/bundle.js"
# Declaration variables et imports fichiers -------------------------------
##Import Config
conf <- read.config(file="./cfg_shinyapps.ini")
##Import chemin
data_path<-conf$CHEMIN$SAVE_DIR
processed_folder<-conf$CHEMIN$PROCESSED_FOLDER
##Import nom fichiers
acled_file<-conf$NOM_FICHIERS$ACLED
wdi_file<-conf$NOM_FICHIERS$WDI
dhs_file<-conf$NOM_FICHIERS$DHS
inform_file<-conf$NOM_FICHIERS$INFORM
sahel_shapefile<-conf$SHP$SAHEL_SHAPEFILE
micro_world_file<-conf$NOM_FICHIERS$MICRO_WORLD
unhcr_file<-conf$NOM_FICHIERS$UNHCR
countries_file=conf$NOM_FICHIERS$COUNTRIES
## Nom_fichiers_processed
dhs_processed<-conf$NOM_FICHIERS$PROCESSED_DHS
dhs_sf_processed<-conf$NOM_FICHIERS$PROCESSED_DHS_SF
wdi_processed<-conf$NOM_FICHIERS$PROCESSED_WDI
acled_processed<-conf$NOM_FICHIERS$PROCESSED_ACLED
inform_processed<-conf$NOM_FICHIERS$PROCESSED_INFORM
cluster_processed<-conf$NOM_FICHIERS$PROCESSED_CLUSTER
afd_processed<-conf$NOM_FICHIERS$PROCESSED_AFD
micro_world_processed<-conf$NOM_FICHIERS$PROCESSED_MICRO_WORLD
sahel_tiwara_geo_processed<-conf$NOM_FICHIERS$PROCESSED_SAHEL_TIWARA_GEO
unhcr_processed<-conf$NOM_FICHIERS$PROCESSED_UNHCR
work_data_processed<-conf$NOM_FICHIERS$PROCESSED_WORK_DATA
work_data_ts_prep_processed<-conf$NOM_FICHIERS$PROCESSED_WORK_DATA_TS_PREP
esquisse_processed<-conf$NOM_FICHIERS$PROCESSED_ESQUISSE
boxplot_processed<-conf$NOM_FICHIERS$PROCESSED_BOXPLOT
############################### FILE READING
variables<-strsplit(conf$VARIABLES_DHS$var_dhs,",")[[1]]
databases_work<-strsplit(conf$DBNOMICS_EMPLOYMENT$databases,",")[[1]]
countries_work<-strsplit(conf$DBNOMICS_EMPLOYMENT$countries,",")[[1]]
masques_work<-conf$DBNOMICS_EMPLOYMENT$mask
provider_work<-conf$DBNOMICS_EMPLOYMENT$provider
databases_work_ts<-conf$DBNOMICS_EMPLOYMENT$database_ts
iso3_cn<-strsplit(conf$COUNTRY_LISTS$ISO3_CN,",")[[1]]
iso3_clust<-strsplit(conf$COUNTRY_LISTS$ISO3_CLUST,",")[[1]]
country_names<-strsplit(conf$COUNTRY_LISTS$COUNTRY_NAME,",")[[1]]
country_names_fr<-strsplit(conf$COUNTRY_LISTS$COUNTRY_NAME_FR,",")[[1]]
# DHS IMPORT----------------------
df_dhs <- read_rds(paste0(data_path,processed_folder,dhs_processed))
# sdg4 indicators IMPORT------------------------
sdg4indics<-read_rds(paste0(data_path,processed_folder,wdi_processed))
# ACLED IMPORT---------------------------
acled_tiwara <- read_rds(paste0(data_path,processed_folder,acled_processed))
# data for map --------------------------------------------------------------------
df_dhs_sf <- read_rds(paste0(data_path,processed_folder,dhs_sf_processed))
#### Donnee INform Risk  IMPORT#####@-----------------------------------
# Inform Indicators
INFORM_SAHEL<- read_rds(paste0(data_path,processed_folder,inform_processed))
sahel_tiwara <- country_names
inform_sahel_tiwara <- INFORM_SAHEL %>%filter(iso3 %in% iso3_cn)
## On récupère la fraicheur des datas pour chaque dataset
fraicheur_acled<-max(acled_tiwara$event_date)
fraicheur_inform<-str_match(pattern = " (\\d+)_",inform_file)[2]
fraicheur_sdg4<-max(sdg4indics$period)
fraicheur_dhs<-max(df_dhs$SurveyYear)
fraicheur_dhs_pays<-df_dhs %>%
group_by(CountryName) %>%
summarise(max(SurveyYear))
chaine_char_dhs<-"<ul>"
for (i in 1:nrow(fraicheur_dhs_pays)){
chaine<-paste0("<li>",as.character(fraicheur_dhs_pays[i,1] %>% pull(CountryName))," : ",fraicheur_dhs_pays[i,2],"</li>")
chaine_char_dhs<-paste0(chaine_char_dhs,chaine)
}
chaine_char_dhs<- paste0(chaine_char_dhs,"</ul>")
# Code clusters --------------------------------------------------------------------
## Import_Data
df_clustered<-read_rds(paste0(data_path,processed_folder,cluster_processed))
numeric_car_clust<-names(df_clustered)[sapply(df_clustered,class)=="numeric"]
boxplot_df_processed<-read_rds(paste0(data_path,processed_folder,boxplot_processed))
### DATA Carte AFD projets
# Données de l'aide au développement de l'AFD -----------------------------
afddata_sahel<-read_rds(paste0(data_path,processed_folder,afd_processed))
## Icone
Icon <- makeIcon(
iconUrl = "https://i.vimeocdn.com/portrait/17890243_640x640",
iconWidth = 35*215/230, iconHeight = 35,
iconAnchorX = 35*215/230/2, iconAnchorY = 35) # retrieve AFD logo to add on the map at each Beneficiaire location
## Dataframe coordonnées
AFDCoords_sahel <- data.frame(
lat = afddata_sahel$latitude,
lng = afddata_sahel$longitude)  # prepare a dataframe with GPS coordinates
## Libellés, bénéficiares
BeneficiaireName <- paste("<a href='", "'>", afddata_sahel$libelle_beneficiaire_primaire,"</a>" ,sep = "")
AFD_Desc<-paste(afddata_sahel$libelle_cicid,afddata_sahel$description_du_projet,sep=" :<br/>")
## Data Financial Index ---------------------------------------
classic_labels<-c("yes","no","don't know", "refuse")
unclassic_labels<-c("no","yes")
## Data financial index
data_index<-read_rds(paste0(data_path,processed_folder,micro_world_processed))
## Variables catégorielles
data_index_cate<-c("gender","education","work","classe_age","income_quantile")
## Variables numériques
data_index_rep<-c("has_db_card","has_cd_card","save_for_business","save_for_old_age","mobileowner","has_national_id","account","saved")
##-------get geodata on Sahel states
#sahel <- ne_states(country=sahel_tiwara, returnclass = "sf") # filter on states in target countries
#st_write(st_as_sf(sahel), './inputs/sahel.shp')
sahel_tiwara_geo <- read_rds(paste0(data_path,processed_folder,sahel_tiwara_geo_processed))
### HDX Segment ----------
hdx_geo_2<-read_rds(paste0(data_path,processed_folder,unhcr_processed))
## ILO - Youth employment data ----------------------------
work_data<-read_rds(paste0(data_path,processed_folder,work_data_processed))
work_data_ts_prep<-read_rds(paste0(data_path,processed_folder,work_data_ts_prep_processed))
work_data_ts_name<-work_data_ts_prep$dataset_name[1]
work_data_ts<-work_data_ts_prep %>%
select(-series_name,-dataset_name) %>%
spread(ref_area,value) %>%
arrange(original_period)
## Esquisse Country Dataset ================
esquisse_country<-read_rds(paste0(data_path,processed_folder,esquisse_processed))
## Polygones
poly_dhs<-df_dhs %>%
select(CharacteristicLabel,Coordinates) %>%
mutate(Coordinates=as.character(Coordinates)) %>%
distinct()
mapdata <- df_clustered
d3_map(shape = mapdata) %>%
add_discrete_scale(var="clust",palette = "Set1") %>%
#add_continuous_breaks(var = input$inform_indicator, palette = "Blues",direction = -1) %>%
add_tooltip(value = sprintf("<b>{CharacteristicLabel}</b>: {clust}",1))%>%
add_legend(title = "Cluster", suffix = "") %>%
add_labs(caption = "Data from DHS Program and INFORM Database")
sahel_tiwara_geo_reat
runApp()
runApp()
rlang::last_error()
st_as_sf(sahel_tiwara_geo$Coordinates)
st_as_sfc(sahel_tiwara_geo$Coordinates)
runApp()
rlang::last_error()
df_clustered
runApp()
rlang::last_error()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(fontawesome)
library(shinyWidgets)
library(bs4Dash)
library(plotly)
library(r2d3)
library(r2d3maps)
library(rnaturalearth)
library(magick)
library(leaflet)
library(leaflet.extras)
library(lubridate)
library(DT)
library(recipes)
library(highcharter)
library(tidyverse)
library(billboarder)
library(echarts4r)
library(countrycode)
library(shinydashboard)
library(flexdashboard)
library(sf)
library(shinythemes)
library(htmlwidgets)
library(janitor)
library(configr)
library(httr)
library(jsonlite)
library(shinyWidgets)
library(corrplot)
library(tsne)
library(NbClust)
library(readxl)
library(readr)
library(geosphere)
library(qualpalr)
library(circlize)
library(rdbnomics)
library(esquisse)
## Permet de télécharger les cartes leaflet
jsfile <- "https://rawgit.com/rowanwins/leaflet-easyPrint/gh-pages/dist/bundle.js"
# Declaration variables et imports fichiers -------------------------------
##Import Config
conf <- read.config(file="./cfg_shinyapps.ini")
##Import chemin
data_path<-conf$CHEMIN$SAVE_DIR
processed_folder<-conf$CHEMIN$PROCESSED_FOLDER
##Import nom fichiers
acled_file<-conf$NOM_FICHIERS$ACLED
wdi_file<-conf$NOM_FICHIERS$WDI
dhs_file<-conf$NOM_FICHIERS$DHS
inform_file<-conf$NOM_FICHIERS$INFORM
sahel_shapefile<-conf$SHP$SAHEL_SHAPEFILE
micro_world_file<-conf$NOM_FICHIERS$MICRO_WORLD
unhcr_file<-conf$NOM_FICHIERS$UNHCR
countries_file=conf$NOM_FICHIERS$COUNTRIES
## Nom_fichiers_processed
dhs_processed<-conf$NOM_FICHIERS$PROCESSED_DHS
dhs_sf_processed<-conf$NOM_FICHIERS$PROCESSED_DHS_SF
wdi_processed<-conf$NOM_FICHIERS$PROCESSED_WDI
acled_processed<-conf$NOM_FICHIERS$PROCESSED_ACLED
inform_processed<-conf$NOM_FICHIERS$PROCESSED_INFORM
cluster_processed<-conf$NOM_FICHIERS$PROCESSED_CLUSTER
afd_processed<-conf$NOM_FICHIERS$PROCESSED_AFD
micro_world_processed<-conf$NOM_FICHIERS$PROCESSED_MICRO_WORLD
sahel_tiwara_geo_processed<-conf$NOM_FICHIERS$PROCESSED_SAHEL_TIWARA_GEO
unhcr_processed<-conf$NOM_FICHIERS$PROCESSED_UNHCR
work_data_processed<-conf$NOM_FICHIERS$PROCESSED_WORK_DATA
work_data_ts_prep_processed<-conf$NOM_FICHIERS$PROCESSED_WORK_DATA_TS_PREP
esquisse_processed<-conf$NOM_FICHIERS$PROCESSED_ESQUISSE
boxplot_processed<-conf$NOM_FICHIERS$PROCESSED_BOXPLOT
############################### FILE READING
variables<-strsplit(conf$VARIABLES_DHS$var_dhs,",")[[1]]
databases_work<-strsplit(conf$DBNOMICS_EMPLOYMENT$databases,",")[[1]]
countries_work<-strsplit(conf$DBNOMICS_EMPLOYMENT$countries,",")[[1]]
masques_work<-conf$DBNOMICS_EMPLOYMENT$mask
provider_work<-conf$DBNOMICS_EMPLOYMENT$provider
databases_work_ts<-conf$DBNOMICS_EMPLOYMENT$database_ts
iso3_cn<-strsplit(conf$COUNTRY_LISTS$ISO3_CN,",")[[1]]
iso3_clust<-strsplit(conf$COUNTRY_LISTS$ISO3_CLUST,",")[[1]]
country_names<-strsplit(conf$COUNTRY_LISTS$COUNTRY_NAME,",")[[1]]
country_names_fr<-strsplit(conf$COUNTRY_LISTS$COUNTRY_NAME_FR,",")[[1]]
# DHS IMPORT----------------------
df_dhs <- read_rds(paste0(data_path,processed_folder,dhs_processed))
# sdg4 indicators IMPORT------------------------
sdg4indics<-read_rds(paste0(data_path,processed_folder,wdi_processed))
# ACLED IMPORT---------------------------
acled_tiwara <- read_rds(paste0(data_path,processed_folder,acled_processed))
# data for map --------------------------------------------------------------------
df_dhs_sf <- read_rds(paste0(data_path,processed_folder,dhs_sf_processed))
#### Donnee INform Risk  IMPORT#####@-----------------------------------
# Inform Indicators
INFORM_SAHEL<- read_rds(paste0(data_path,processed_folder,inform_processed))
sahel_tiwara <- country_names
inform_sahel_tiwara <- INFORM_SAHEL %>%filter(iso3 %in% iso3_cn)
## On récupère la fraicheur des datas pour chaque dataset
fraicheur_acled<-max(acled_tiwara$event_date)
fraicheur_inform<-str_match(pattern = " (\\d+)_",inform_file)[2]
fraicheur_sdg4<-max(sdg4indics$period)
fraicheur_dhs<-max(df_dhs$SurveyYear)
fraicheur_dhs_pays<-df_dhs %>%
group_by(CountryName) %>%
summarise(max(SurveyYear))
chaine_char_dhs<-"<ul>"
for (i in 1:nrow(fraicheur_dhs_pays)){
chaine<-paste0("<li>",as.character(fraicheur_dhs_pays[i,1] %>% pull(CountryName))," : ",fraicheur_dhs_pays[i,2],"</li>")
chaine_char_dhs<-paste0(chaine_char_dhs,chaine)
}
chaine_char_dhs<- paste0(chaine_char_dhs,"</ul>")
# Code clusters --------------------------------------------------------------------
## Import_Data
df_clustered<-read_rds(paste0(data_path,processed_folder,cluster_processed))
numeric_car_clust<-names(df_clustered)[sapply(df_clustered,class)=="numeric"]
boxplot_df_processed<-read_rds(paste0(data_path,processed_folder,boxplot_processed))
### DATA Carte AFD projets
# Données de l'aide au développement de l'AFD -----------------------------
afddata_sahel<-read_rds(paste0(data_path,processed_folder,afd_processed))
## Icone
Icon <- makeIcon(
iconUrl = "https://i.vimeocdn.com/portrait/17890243_640x640",
iconWidth = 35*215/230, iconHeight = 35,
iconAnchorX = 35*215/230/2, iconAnchorY = 35) # retrieve AFD logo to add on the map at each Beneficiaire location
## Dataframe coordonnées
AFDCoords_sahel <- data.frame(
lat = afddata_sahel$latitude,
lng = afddata_sahel$longitude)  # prepare a dataframe with GPS coordinates
## Libellés, bénéficiares
BeneficiaireName <- paste("<a href='", "'>", afddata_sahel$libelle_beneficiaire_primaire,"</a>" ,sep = "")
AFD_Desc<-paste(afddata_sahel$libelle_cicid,afddata_sahel$description_du_projet,sep=" :<br/>")
## Data Financial Index ---------------------------------------
classic_labels<-c("yes","no","don't know", "refuse")
unclassic_labels<-c("no","yes")
## Data financial index
data_index<-read_rds(paste0(data_path,processed_folder,micro_world_processed))
## Variables catégorielles
data_index_cate<-c("gender","education","work","classe_age","income_quantile")
## Variables numériques
data_index_rep<-c("has_db_card","has_cd_card","save_for_business","save_for_old_age","mobileowner","has_national_id","account","saved")
##-------get geodata on Sahel states
#sahel <- ne_states(country=sahel_tiwara, returnclass = "sf") # filter on states in target countries
#st_write(st_as_sf(sahel), './inputs/sahel.shp')
sahel_tiwara_geo <- read_rds(paste0(data_path,processed_folder,sahel_tiwara_geo_processed))
### HDX Segment ----------
hdx_geo_2<-read_rds(paste0(data_path,processed_folder,unhcr_processed))
## ILO - Youth employment data ----------------------------
work_data<-read_rds(paste0(data_path,processed_folder,work_data_processed))
work_data_ts_prep<-read_rds(paste0(data_path,processed_folder,work_data_ts_prep_processed))
work_data_ts_name<-work_data_ts_prep$dataset_name[1]
work_data_ts<-work_data_ts_prep %>%
select(-series_name,-dataset_name) %>%
spread(ref_area,value) %>%
arrange(original_period)
## Esquisse Country Dataset ================
esquisse_country<-read_rds(paste0(data_path,processed_folder,esquisse_processed))
## Polygones
poly_dhs<-df_dhs %>%
select(CharacteristicLabel,Coordinates) %>%
mutate(Coordinates=as.character(Coordinates)) %>%
distinct()
#select_country <- input$CountryName
sahel_tiwara_geo_filtered <- sahel_tiwara_geo %>%
select(admin1bis,Coordinates)%>%
mutate(Coordinates=st_as_sfc(Coordinates)) %>%
st_as_sf()
#select_country <- input$CountryName
sahel_tiwara_geo_filtered <- sahel_tiwara_geo %>%
select(admin1bis,Coordinates)%>%
mutate(Coordinates=st_as_sfc(Coordinates))
#select_country <- input$CountryName
sahel_tiwara_geo_filtered <- sahel_tiwara_geo %>%
select(admin1bis,Coordinates)
sahel_tiwara_geo
sahel_tiwara_geo
sahel_tiwara_geo$country
sahel_tiwara_geo$Coordinates
sahel_tiwara_geo%>%
mutate(Coordinates=st_as_sfc(Coordinates))
#select_country <- input$CountryName
sahel_tiwara_geo_filtered <- sahel_tiwara_geo%>%
mutate(Coordinates=st_as_sfc(Coordinates)) %>%
select(select_indicator,admin1bis,Coordinates)
#select_country <- input$CountryName
sahel_tiwara_geo_filtered <- sahel_tiwara_geo%>%
mutate(Coordinates=st_as_sfc(Coordinates)) %>%
select(admin1bis,Coordinates)
runApp()
runApp()
runApp()
View(sahel_tiwara_geo)
runApp()
df_dhs_recents
df_dhs_recents<-df_dhs %>%
slice(-starts_with("Population",T,as.character(Indicator))) %>%
select(Indicator,Value,SurveyYear,DHS_CountryCode,CountryName,CharacteristicLabel) %>%
group_by(Indicator,DHS_CountryCode,CharacteristicLabel,CountryName) %>%
arrange(desc(SurveyYear)) %>%
slice(1) %>%
ungroup() %>%
select(-SurveyYear) %>%
spread(Indicator,Value)
inform_data<-read_excel(paste0(data_path,inform_file),
sheet = "INFORM SAHEL Sep 2018 (a-z)",
na = c("(0-10)","x","(0-50)","(0-100%)","()","(1-191)")) %>%
slice(-1L)%>%janitor::clean_names() #remove 1st row, which is simple the scale
inform_sahel_tiwara <- inform_data %>%filter(iso3 %in% iso3_clust) %>%
mutate(admin1bis=case_when(admin1=="Boucle du Mouhoun" ~ "Boucle de Mouhoun",
admin1=="Centre Est" ~ "Centre-Est",
admin1=="Centre Nord" ~ "Centre-Nord",
admin1=="Centre Ouest" ~ "Centre-Ouest",
admin1=="Centre Sud" ~ "Centre-Sud",
admin1=="Centre" ~ "Centre (excluding Ouagadougou)",
admin1=="Segou" ~ "Ségou",
admin1=="Timbuktu" ~ "Tombouctou",
admin1=="Tillabery" ~ "Tillabéri",
admin1=="Barh el Ghazel" ~ "Barh El Gazal",
admin1=="Chari-Baguirmi" ~ "Chari Baguirmi",
admin1=="Guera"~"Guéra",
admin1=="Mayo-Kebbi Est" ~ "Mayo Kebbi Est",
admin1=="Mayo-Kebbi Ouest" ~ "Mayo Kebbi Ouest",
admin1=="Moyen-Chari" ~ "Moyen Chari",
admin1=="Ouaddai" ~ "Ouaddaï",
admin1=="Tandjile"~"Tandjilé",
T ~ admin1))
df_dhs_recents
View(df_dhs_recents)
runApp()
View(sahel_tiwara_geo)
runApp()
